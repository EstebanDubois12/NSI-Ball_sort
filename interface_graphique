from classe_bs import *
from  tkinter import *

def dessiner_eprouvette(canvas, x, y, largeur=40, hauteur=180, rayon=20):
    # Corps rectangle
    canvas.create_rectangle(x, y, x + largeur, y + hauteur - rayon, fill='#ffffff', outline='black')
    # Bas arrondi sans contour (trait)
    canvas.create_arc(x, y + hauteur - 2*rayon, x + largeur, y + hauteur, start=0, extent=-180, fill='#ffffff', outline='black')
    # Ligne bleue en haut (fake ligne)
    canvas.create_line(x, y, x + largeur, y, fill='#ffffff', width=2)
    # Ligne bleue sur la partie plate de l'arc (bas)
    canvas.create_line(x, y + hauteur - rayon, x + largeur, y + hauteur - rayon, fill='#ffffff', width=2)

root = Tk()
root.geometry("1000x700")

canvas = Canvas(root, width=1000, height=400, bg='white')
canvas.place(relx=0, rely=0)

#cadre pour les tubes
cadre_tubes = Frame(root)
cadre_tubes.pack(pady=10)

info_var = StringVar()
score_var = StringVar()

#titre
label = Label(root, text="Ball Sort", font=("Helvetica", 20, "bold"))
label.pack()

#affichage du score:


label_score = Label(root, textvariable=score_var, font=("Arial", 10,))
label_score.pack()

#texte action en cours

label_info = Label(root, textvariable=info_var, font=("Arial", 12), fg="#3477ca")
label_info.pack(pady=8)

entree = {"depart":None,"arrive":None}

def jouer():
    global j
    try :
        code = j.deplace(entree["depart"]-1,entree["arrive"]-1)
        if code == 3:
            info_var.set("On ne peut mettre que 4 balles dans un tube ! selectionne en un autre")
        elif code == 4:
            info_var.set("Les couleurs des 2 balles ne sont pas identiques choisi en d'autres")
        elif code == 0:
            info_var.set("Les balles ont bien ete deplacé !")
        entree["depart"] = None
        entree["arrive"] = None
        score_var.set(f"Score: {j.score}")
        afficher_plateau()
    except TypeError: #si on appuie sur jouer sans avoir selectionné de tube erreur
        info_var.set("Selectionne un tube de depart et d'arrivé avant de jouer")


def annuler():
    entree["depart"] = None
    entree["arrive"] = None
    info_var.set("Sélection annulée. Sélectionne d'abord le tube de départ")

def selection_tube(idx):
    if entree["depart"] == None:
        entree["depart"]=idx
        info_var.set(f"Tube de Depart : Tube {idx}")
    elif entree["arrive"] == None:
        if idx == entree["depart"]:
            info_var.set("Choisir un tube different pour l'arrivee")
        else:
            entree["arrive"] = idx
            info_var.set(f"Tube de depart : Tube {entree['depart']} / Tube d'arrivee : Tube {idx}")

def creer_fenetre_fin(bjouer):
    info_var.set(f"Bravo vous avez gagné !")
    b.pack
    bjouer['state'] = DISABLED
    
def nouvelle_partie():
    global j
    root.destroy
    score_var.set("Score : 500")
    info_var.set("Sélectionne d'abord le tube de départ")
    j = Jeu()
    j.initialise_plateau()
    afficher_plateau()
    
def afficher_plateau():
    global info_var, b
    c = None
    for i in range(6):
        dessiner_eprouvette(canvas, 290+80*i, 150)
        for k in range(len(j.plateau.tubes[i].balles)):
            if not(j.plateau.tubes[i].est_vide()) :
                a = str(j.plateau.tubes[i].balles[k].couleur)
                if a == "R" :
                    c = "#DB0D0D"
                if a == "V" :
                    c = "#4EBA11"
                if a == "J" :
                    c = "#D6AB1E"
                if a == "B" :
                    c = "#1182BA"
                canvas.create_oval(328+80*i, 328-40*k, 292+80*i, 292-40*k, fill= c)
                

                
        #boutons
    for i in range(1,7):
        bouton = Button(root, text=f"Tube {i}" , command=lambda idx=i: selection_tube(idx) , width=6 , font=("Arial", 12) )
        bouton.place(x = 195+81*i, y = 420)

    #bouton action jeu
    bjouer = Button(root, text="Jouer", command=jouer, bg="#7fd57f", font=("Arial", 12), state = NORMAL)
    bjouer.place(x=400,y=500)

    bannuler = Button(root, text="Annuler", command=annuler, bg="#fadb8b", font=("Arial", 12))
    bannuler.place(x=470,y=500)

    bfermer = Button(root, text="Fermer", command=root.destroy, bg="#e97474", font=("Arial", 12))
    bfermer.place(x=550,y=500)
    
    b = Button(root , text = "Nouvelle partie" , command = nouvelle_partie)
    b.place(x=20,y=20)
    
    
    if j.plateau.est_gagnant() :
        creer_fenetre_fin(bjouer)
    
nouvelle_partie()

root.mainloop()


